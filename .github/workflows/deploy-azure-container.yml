name: Azure - Container App
on:
  push:
    branches: [master]
    paths:
      - "WarcraftGearPlanner.Server/**"
      - "WarcraftGearPlanner.Shared/**"
      - ".github/workflows/deploy-azure-container.yml"
  pull_request:
    branches: [master]
    paths:
      - "WarcraftGearPlanner.Server/**"
      - "WarcraftGearPlanner.Shared/**"
      - ".github/workflows/deploy-azure-container.yml"
  workflow_dispatch:

jobs:
  build-and-test:
    name: Build & Test
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    env:
      DOTNET_PROJECT_DIRECTORY: "WarcraftGearPlanner.Server"
      DOTNET_TESTS_DIRECTORY: "WarcraftGearPlanner.Server.Tests"
      DOTNET_CONFIG: "Release"
      DOTNET_VERSION: "8.0.x"

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: .NET Setup ${{ env.DOTNET_VERSION }} Environment
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: .NET Build
        run: |
          cd ${{ env.DOTNET_PROJECT_DIRECTORY }}
          dotnet build -c ${{ env.DOTNET_CONFIG }}

      - name: .NET Test
        run: |
          cd ${{ env.DOTNET_TESTS_DIRECTORY }}
          dotnet test -c ${{ env.DOTNET_CONFIG }}

  build-and-deploy:
    name: Build & Deploy
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || (github.event_name == 'workflow_dispatch' && github.ref == 'refs/heads/master')
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout to the branch
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v1.5.1
        with:
          client-id: ${{ secrets.WGPAPI_AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.WGPAPI_AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.WGPAPI_AZURE_SUBSCRIPTION_ID }}

      - name: Build and push container image to registry
        uses: azure/container-apps-deploy-action@v2
        with:
          appSourcePath: ${{ github.workspace }}
          registryUrl: docker.io
          registryUsername: ${{ secrets.WGPAPI_REGISTRY_USERNAME }}
          registryPassword: ${{ secrets.WGPAPI_REGISTRY_PASSWORD }}
          containerAppName: wgp-api
          resourceGroup: warcraft-gear-planner
          imageToBuild: mturchik/wgp-api:${{ github.sha }}
          dockerfilePath: WarcraftGearPlanner.Server/Dockerfile
          environmentVariables: AZURE_SQL_CONNECTIONSTRING=${{ secrets.WGPAPI_AZURE_SQL_CONNECTIONSTRING }} APPLICATIONINSIGHTS_CONNECTION_STRING=${{ secrets.WGAPI_APPLICATIONINSIGHTS_CONNECTION_STRING }}
